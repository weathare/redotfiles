[[plugins]]
repo = 'Shougo/dein.vim'

[[plugins]]
repo = 'Shougo/vimproc.vim'
build = 'make'

[[plugins]]
repo = 'Shougo/vimshell.vim'

[[plugins]]
repo = 'tpope/vim-obsession'

[[plugins]]
repo = 'thinca/vim-unite-history'
on_source = 'unite.vim'

[[plugins]]
repo = 'osyo-manga/unite-filetype'

[[plugins]]
repo = 'sorah/unite-ghq'
on_source = 'unite.vim'

[[plugins]]
repo = 'Shougo/vimfiler.vim'
depends = 'unite.vim'
hook_source = 'source ~/.vim/nvim/rc/vimfiler.rc.vim'

[[plugins]]
repo = 'junegunn/fzf'
depends = 'fzf'
hook_source = 'source ~/.vim/nvim/rc/fzf.rc.vim'

# -------------------------------------
# Git (and Statusline helper)
#
[[plugins]]
repo = 'tpope/vim-fugitive'

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
let g:gitgutter_enabled = 0

nnoremap <silent> ,gg :<C-u>GitGutterToggle<CR>
nnoremap <silent> ,gh :<C-u>GitGutterLineHighlightsToggle<CR>
'''

# -------------------------------------
# Color
#
[[plugins]]
repo = 'itchyny/lightline.vim'

[[plugins]]
repo = 'cocopon/iceberg.vim'

[[plugins]]
repo = 'popkirby/lightline-iceberg'
depends = ['lightline.vim', 'iceberg.vim']
hook_source = 'source ~/.vim/nvim/rc/color.rc.vim'

# -------------------------------------
# Input helper
#
[[plugins]]
repo = 'tyru/caw.vim.git'
hook_add = '''
nmap  <C-_> <Plug>(caw:hatpos:toggle)
vmap  <C-_> <plug>(caw:hatpos:toggle)
'''

[[plugins]]
repo = 'jiangmiao/auto-pairs'

[[plugins]]
repo = 'Shougo/neosnippet-snippets'


[[plugins]]
repo = 'cespare/vim-toml'
on_ft = 'toml'

[[plugins]]
repo = 'elzr/vim-json'
on_ft = 'json'

[[plugins]]
repo = 'scrooloose/syntastic'
on_i = 1
hook_add = '''
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_mode_map = {
    \ 'mode': 'passive',
    \ 'active_filetypes': ['go'],
    \ 'passive_filetypes': ['ruby'],
    \ }
let g:syntastic_ruby_checkers = ['rubocop']

nnoremap <Leader>sc :SyntasticCheck<CR>
nnoremap <Leader>st :SyntasticToggleMode<CR>
'''

[[plugins]]
repo = 'junegunn/vim-easy-align'
hook_add = '''
vmap <Enter> <Plug>(EasyAlign)
nmap ga <Plug>(EasyAlign)
'''

# [[plugins]]
# repo = 'zchee/deoplete-go'
# build = 'make'
# on_ft = 'go'
# depends = 'deoplete.vim'
# hook_post_update = '''
# let g:deoplete#sources#go#focode_binady = $GOPATH . '/bin/gocode'
# let g:deoplete#sources#go#sort_class = ['package', 'func', 'type', 'var', 'const']
# '''

[[plugins]]
repo = 'fatih/vim-go'
on_ft = 'go'
hook_add = '''
let g:go_highlight_methods = 1
let g:go_highlight_structs = 1
let g:go_highlight_functions = 1
let g:go_highlight_build_constraints = 1

autocmd FileType go setlocal noexpandtab
autocmd FileType go setlocal tabstop=4
autocmd FileType go setlocal shiftwidth=4

autocmd FileType go nmap <Space>gr <Plug>(go-run)
autocmd FileType go nmap <Space>gb <Plug>(go-build)
autocmd FileType go nmap <Space>gt <Plug>(go-test)
autocmd FileType go nmap <Space>gc <Plug>(go-coverage)
autocmd FileType go nmap <Space>gd <Plug>(go-doc)
autocmd FileType go nmap <Space>gi <Plug>(go-import)
autocmd FileType go nmap <Space>gm <Plug>(go-implements)
'''

[[plugins]]
repo = 'vim-jp/vim-go-extra'
on_ft = 'go'

[[plugins]]
repo = 'basyura/unite-rails'

[[plugins]]
repo = 'itmammoth/run-rspec.vim'
on_ft = "rb"
hook_add = '''
nnoremap ,rs :RunSpec<CR>
nnoremap ,rl :RunSpecLine<CR>
nnoremap ,re :RunSpecLastRun<CR>
nnoremap ,rc :RunSpecCloseResult<CR>
'''

[[plugins]]
repo = 'osyo-manga/vim-monster'
hook_add = '''
let g:monster#completion#rcodetools#backend = "async_rct_complete"
let g:deoplete#sources#omni#input_patterns = {
    \ "ruby" : '[^. *\t]\.\w*\|\h\w*::',
    \ }
'''

[[plugins]]
repo = 'slim-template/vim-slim'
hook_add = '''
autocmd BufNewFile,BufRead *.slim setlocal filetype=slim
'''

# -------------------------------------
# Operators
#
[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'kana/vim-operator-replace'
hook_add = '''
map _ <Plug>(operator-replace)
'''

